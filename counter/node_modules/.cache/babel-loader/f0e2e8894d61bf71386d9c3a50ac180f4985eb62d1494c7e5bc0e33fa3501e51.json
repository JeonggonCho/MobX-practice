{"ast":null,"code":"import { action, computed, makeObservable, observable } from \"mobx\";\nclass countStore {\n  constructor() {\n    this.count = 0;\n    makeObservable(this, {\n      count: observable,\n      isNegative: computed,\n      increase: action,\n      decrease: action\n    });\n  }\n  get isNegative() {\n    return this.count < 0 ? \"Yes\" : \"No\";\n  }\n  increase() {\n    this.count++;\n  }\n  decrease() {\n    this.count--;\n  }\n}\n;\nexport default countStore;","map":{"version":3,"names":["action","computed","makeObservable","observable","countStore","constructor","count","isNegative","increase","decrease"],"sources":["/Users/gon/Desktop/mobx-practice/counter/src/counterStore.js"],"sourcesContent":["import {action, computed, makeObservable, observable} from \"mobx\";\n\nclass countStore {\n  count = 0;\n\n  constructor() {\n    makeObservable(this, {\n      count: observable,\n      isNegative: computed,\n      increase: action,\n      decrease: action\n    })\n  };\n\n  get isNegative() {\n    return this.count < 0 ? \"Yes\" : \"No\";\n  };\n\n  increase() {\n    this.count++;\n  };\n\n  decrease() {\n    this.count--;\n  };\n};\n\nexport default countStore;"],"mappings":"AAAA,SAAQA,MAAM,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,UAAU,QAAO,MAAM;AAEjE,MAAMC,UAAU,CAAC;EAGfC,WAAWA,CAAA,EAAG;IAAA,KAFdC,KAAK,GAAG,CAAC;IAGPJ,cAAc,CAAC,IAAI,EAAE;MACnBI,KAAK,EAAEH,UAAU;MACjBI,UAAU,EAAEN,QAAQ;MACpBO,QAAQ,EAAER,MAAM;MAChBS,QAAQ,EAAET;IACZ,CAAC,CAAC;EACJ;EAEA,IAAIO,UAAUA,CAAA,EAAG;IACf,OAAO,IAAI,CAACD,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI;EACtC;EAEAE,QAAQA,CAAA,EAAG;IACT,IAAI,CAACF,KAAK,EAAE;EACd;EAEAG,QAAQA,CAAA,EAAG;IACT,IAAI,CAACH,KAAK,EAAE;EACd;AACF;AAAC;AAED,eAAeF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}